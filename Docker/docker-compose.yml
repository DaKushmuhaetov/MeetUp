version: '3.6'

services:
  meetup-webapi:
    image: danilkush/meetup:latest
    volumes:
      - /meetup-data/meetup/logs/webapi/:/app/logs
    environment:
      - ConnectionStrings:MeetUp=Server=meetup-postgresdb;Port=5353;Database=${POSTGRES_DB};User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};

    depends_on:
      - meetup-postgresdb
    restart: always
    networks:
      - backend-network
      - postgres-network

  meetup-proxy:
    image: nginx:1.17.4-alpine
    ports:
      - "25050:25050"
    volumes:
      - /docker-data/meetup/logs/proxy/:/var/log/nginx
      - ./nginx/meetup.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/meetup-upstreams/api.conf:/etc/nginx/conf.d/meetup-upstreams/api.conf
      - ./nginx/meetup-locations/api.conf:/etc/nginx/conf.d/meetup-locations/api.conf
    depends_on:
      - meetup-webapi
    restart: always
    networks:
        - backend-network

  meetup-postgresdb:
    build:
        context: ./postgres
        dockerfile: db.Dockerfile
    image: postgres:12.0-alpine
    ports:
      - "5353:5353"
    volumes:
      - ./postgres/postgresql.conf:/var/lib/postgresql/meetup/postgresql.conf
      - PGDATA:/var/lib/postgresql/data/meetup/
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data/meetup/
      - DB_VENDOR=postgres
    restart: always
    networks:
      - postgres-network

volumes:
  meetup-data:
    driver: local
  PGDATA:

networks:
  backend-network:
  postgres-network: